class Solution {
    public int[] sortArray(int[] arr) {
        int[] temp = new int[arr.length];
        mergeSort(arr, 0, arr.length - 1, temp);
        return arr;
    }
     private void mergeSort(int[] arr, int l, int r, int[] temp) {
        if (l < r) {
            int mid = l + (r - l) / 2;
            mergeSort(arr, l, mid, temp);
            mergeSort(arr, mid + 1, r, temp);
            merge(arr, l, mid, r, temp);
        }
    }
    private void merge(int[] arr, int l, int mid, int r, int[] temp) {
        int i = l;
        int j = mid + 1;
        int k = l;

        while (i <= mid && j <= r) {
            if (arr[i] <= arr[j]) {
                temp[k++] = arr[i++];
            } else {
                temp[k++] = arr[j++];
            }
        }

        while (i <= mid) {
            temp[k++] = arr[i++];
        }

        while (j <= r) {
            temp[k++] = arr[j++];
        }

        for (int idx = l; idx <= r; idx++) {
            arr[idx] = temp[idx];
        }
    }
}
