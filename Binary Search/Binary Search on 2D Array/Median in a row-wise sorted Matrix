import java.util.*;

public class Solution {
    public static int findMedian(int[][] arr, int n, int m) {
        int low = Integer.MAX_VALUE;
        int high = Integer.MIN_VALUE;

        // Find the minimum and maximum elements
        for (int i = 0; i < n; i++) {
            low = Math.min(low, arr[i][0]);       // Minimum of first column
            high = Math.max(high, arr[i][m - 1]); // Maximum of last column
        }

        int desired = (n * m) / 2;

        while (low <= high) {
            int mid = (low + high) / 2;
            int count = countSmallerOrEqual(arr, mid, n, m);

            if (count <= desired) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }

        return low;
    }

    public static int countSmallerOrEqual(int[][] arr, int x, int n, int m) {
        int count = 0;

        for (int i = 0; i < n; i++) {
            int low = 0, high = m - 1;
            while (low <= high) {
                int mid = (low + high) / 2;
                if (arr[i][mid] <= x) {
                    low = mid + 1;
                } else {
                    high = mid - 1;
                }
            }
            count += low; // 'low' is the number of elements ? x in this row
        }

        return count;
    }
}
