class Solution {
    /*You are required to complete this method*/
    int findK(int A[][], int n, int m, int k) {
        int left = 0;
        int right = m-1;
        int top = 0;
        int bottom = n-1;
        
        int count = 0;
        int ans = 0;
        while(top <= bottom && left <= right) {
            for(int i = left; i <= right; i++) {
                count++;
                if(count == k) {
                    ans = A[top][i];
                    break;
                }
            }
            top++;
            
            for(int i = top; i <= bottom; i++) {
                count++;
                if(count == k) {
                    ans = A[i][right];
                    break;
                }
            }
            right--;
            if(top <= bottom) {
                for(int i = right; i >= left; i--) {
                    count++;
                    if(count == k) {
                    ans = A[bottom][i];
                    break;
                }
                }
            }
            bottom--;
            
            if(left <= right) {
                for(int i = bottom; i >= top; i--) {
                    count++;
                    if(count == k) {
                    ans = A[i][left];
                    break;
                }
                }
            }
            left++;
        }
        return ans;
    }
}
