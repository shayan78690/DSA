class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        List<Integer> ans = new ArrayList<>();
        int left = 0, right = 0;

        while (right < s.length()) {
            // Shrink window if size exceeds length of p
            if (right - left + 1 > p.length()) {
                left++;
            }

            // Check if current window is an anagram
            if (right - left + 1 == p.length()) {
                if (isAnagram(p, s.substring(left, right + 1))) {
                    ans.add(left);
                }
            }

            right++;
        }

        return ans;
    }

    public boolean isAnagram(String s1, String s2) {
        if (s1.length() != s2.length()) return false;

        int[] freq = new int[26];

        // Count frequency difference between s1 and s2
        for (int i = 0; i < s1.length(); i++) {
            freq[s1.charAt(i) - 'a']++;
            freq[s2.charAt(i) - 'a']--;
        }

        // If all frequencies are zero, it's an anagram
        for (int i = 0; i < 26; i++) {
            if (freq[i] != 0) return false;
        }

        return true;
    }
}
