class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> list = new ArrayList<>();
        for(int row = 1; row <= numRows; row++) {
            list.add(generateRow(row));
        }
        return list;
    }

    public List<Integer> generateRow(int row) {
        List<Integer> temp = new ArrayList<>();
        long res = 1;
        temp.add(1);
        for(int i = 1; i < row; i++) {
            res *= (row-i);
            res /= (i);
            temp.add((int)res);
        }
        return temp;
    }
}










class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> list = new ArrayList<>();
        for(int row = 1; row <= numRows; row++) {
            List<Integer> temp = new ArrayList<>();
            for(int col = 1; col <= row; col++) {
                temp.add(func(row-1, col-1));
            }
            list.add(temp);
        }
        return list;
    }

    public int func(int n, int c) {
        long res = 1;
        for(int i = 0; i < c; i++) {
            res *= (n-i);
            res /= (i+1);
        }
        return (int)res;
    }
}
