class Solution {
    public void sortColors(int[] nums) {
        int n = nums.length;
        int low = 0;
        int mid = 0;
        int high = n-1;
        while(mid <= high) {
            if(nums[mid] == 0) {
                swap(nums, low, mid);
                low++;
                mid++;
            } else if(nums[mid] == 1) {
                mid++;
            } else {
                swap(nums, mid, high);
                high--;
            }
        }
    }
    public void swap(int nums[], int a, int b) {
        int temp = nums[a];
        nums[a] = nums[b];
        nums[b] = temp;
    }
}









class Solution {
    public void sortColors(int[] nums) {
        int count_0 = 0;
        int count_1 = 0;
        int count_2 = 0;
        
        int n = nums.length;
        for(int i = 0; i < n; i++) {
            if(nums[i] == 0) count_0++;
            else if(nums[i] == 1) count_1++;
            else count_2++;
        }

        for(int i = 0; i < count_0; i++) {
            nums[i] = 0;
        }
        for(int i = count_0; i < count_0 + count_1; i++) {
            nums[i] = 1;
        }
        for(int i = count_0 + count_1; i < n; i++) {
            nums[i] = 2;
        }
    }
}
