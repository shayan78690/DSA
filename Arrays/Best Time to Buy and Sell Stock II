class Solution {
    public int maxProfit(int[] prices) {
        int n = prices.length;
        int dp[][] = new int[n+1][2];
        for (int row[] : dp) {
            Arrays.fill(row, -1);
        }
        dp[n][0] = 0;
        dp[n][1] = 0;
        for(int idx = n-1; idx >= 0; idx--) {
            for(int buy = 0; buy <= 1; buy++) {
                int profit;
                if(buy == 1) {
                    int buy_yes = -prices[idx] + dp[idx+1][0];
                    int buy_no = 0 + dp[idx+1][1];
                    profit = Math.max(buy_yes, buy_no);
                } else {
                    int sell_yes = prices[idx] + dp[idx+1][1];
                    int sell_no = 0 + dp[idx+1][0];
                    profit = Math.max(sell_yes, sell_no);
                }
                dp[idx][buy] = profit;
                }
            }
            return dp[0][1];
    }
}
