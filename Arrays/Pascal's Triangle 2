class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> list = new ArrayList<>();
        func(rowIndex + 1, list);
        return list;
    }

    public void func(int rowIndex, List<Integer> list) {
        long ans = 1;
        list.add(1);
        for (int i = 1; i < rowIndex; i++) {
            ans *= (rowIndex - i);
            ans /= i;
            list.add((int)ans);
        }
    }
}






class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> ans = new ArrayList<>();
        for(int c = 0; c <= rowIndex; c++) {
            ans.add(func(rowIndex, c));
        }
        return ans;
    }

    public int func(int n, int c) {
        long res = 1;
        for (int i = 0; i < c; i++) {
            res *= (n - i);
            res /= (i + 1);
        }
        return (int) res;
    }
    }
