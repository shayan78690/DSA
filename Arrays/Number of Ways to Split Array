class Solution {
    public int waysToSplitArray(int[] nums) {
        int n = nums.length;
        long total_sum = 0;
        for (int i = 0; i < n; i++) {
            total_sum += nums[i];
        }

        int count = 0;
        long leftSum = 0;
        for (int i = 0; i < n - 1; i++) {
            leftSum += nums[i];
            long rightSum = total_sum - leftSum;
            if (leftSum >= rightSum)
                count++;
        }
        return count;
    }
}








class Solution {
    public int waysToSplitArray(int[] nums) {
        int n = nums.length;
        long prefix[] = new long[n];
        prefix[n - 1] = nums[n - 1];
        for (int i = n - 2; i >= 0; i--) {
            prefix[i] = nums[i] + prefix[i + 1];
        }

        int count = 0;
        long sum = 0;

        for (int i = 0; i < n; i++) {
            sum += nums[i];
            if (i + 1 < n && sum >= prefix[i + 1]) {
                count++;
            }
        }
        return count;
    }
}
